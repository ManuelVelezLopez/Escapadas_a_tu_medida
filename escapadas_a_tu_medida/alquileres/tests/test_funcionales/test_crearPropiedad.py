# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.support import expected_conditions as EC
import os
from PIL import Image
class TestCrearPropiedad():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_crearPropiedad(self):
    self.driver.get("http://localhost:8000/")
    self.driver.set_window_size(1936, 1056)
    WebDriverWait(self.driver, 10).until(
            EC.presence_of_element_located((By.LINK_TEXT, "Registro"))
        )
    self.driver.find_element(By.LINK_TEXT, "Login").click()
    self.driver.find_element(By.ID, "username").send_keys("angelneria_19")
    self.driver.find_element(By.ID, "password").send_keys("pepe")
    self.driver.find_element(By.CSS_SELECTOR, ".btn-custom").click()
    element = WebDriverWait(self.driver, 10).until(
    EC.presence_of_element_located((By.CSS_SELECTOR, ".bg-transparent"))
)
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element.click()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.LINK_TEXT, "Gestión de propiedades").click()
    self.driver.find_element(By.LINK_TEXT, "Crear una propiedad").click()
    self.driver.find_element(By.ID, "id_titulo").click()
    self.driver.find_element(By.ID, "id_titulo").send_keys("Prueba")
    self.driver.find_element(By.ID, "id_descripcion").click()
    self.driver.find_element(By.ID, "id_descripcion").send_keys("prueba")
    self.driver.find_element(By.ID, "id_ubicacion").click()
    self.driver.find_element(By.ID, "id_ubicacion").send_keys("prueba")
    precio_input = WebDriverWait(self.driver, 10).until(
        EC.presence_of_element_located((By.ID, "id_precio_por_noche"))
    )
    self.driver.execute_script("arguments[0].scrollIntoView(true);", precio_input)
    self.driver.execute_script("arguments[0].click();", precio_input)  # Hacer clic vía JavaScript
    precio_input.send_keys("100")

    huespedes_input = WebDriverWait(self.driver, 10).until(
        EC.presence_of_element_located((By.ID, "id_num_maximo_huespedes"))
    )
    self.driver.execute_script("arguments[0].scrollIntoView(true);", huespedes_input)
    self.driver.execute_script("arguments[0].click();", huespedes_input)  # Hacer clic vía JavaScript
    huespedes_input.send_keys("1")

    habitaciones_input = WebDriverWait(self.driver, 10).until(
        EC.presence_of_element_located((By.ID, "id_num_maximo_habitaciones"))
    )
    self.driver.execute_script("arguments[0].scrollIntoView(true);", habitaciones_input)
    self.driver.execute_script("arguments[0].click();", habitaciones_input)  # Hacer clic vía JavaScript
    habitaciones_input.send_keys("1")
   
    servicios_input = WebDriverWait(self.driver, 10).until(
    EC.presence_of_element_located((By.ID, "id_servicios_disponibles"))
)
    self.driver.execute_script("arguments[0].scrollIntoView(true);", servicios_input)
    self.driver.execute_script("arguments[0].click();", servicios_input)
    servicios_input.send_keys("calefaccion")

    tipo_input = WebDriverWait(self.driver, 10).until(
    EC.presence_of_element_located((By.ID, "id_tipo"))
)
    self.driver.execute_script("arguments[0].scrollIntoView(true);", tipo_input)
    self.driver.execute_script("arguments[0].click();", tipo_input)
    tipo_dropdown = tipo_input.find_element(By.XPATH, "//option[. = 'Estudio']")
    self.driver.execute_script("arguments[0].click();", tipo_dropdown)

    self.driver.find_element(By.ID, "fechas-tab").click()
    self.driver.find_element(By.ID, "fechas_disponibles").click()
    self.driver.find_element(By.CSS_SELECTOR, ".flatpickr-next-month > svg").click()
    self.driver.find_element(By.CSS_SELECTOR, ".flatpickr-next-month > svg").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".flatpickr-next-month > svg")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".flatpickr-next-month > svg").click()
    self.driver.find_element(By.CSS_SELECTOR, ".flatpickr-next-month > svg").click()
    self.driver.find_element(By.CSS_SELECTOR, ".flatpickr-next-month > svg").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".flatpickr-next-month > svg")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".flatpickr-day:nth-child(15)").click()
    self.driver.find_element(By.ID, "fechas_disponibles").send_keys("2025-04-13")
    self.driver.find_element(By.CSS_SELECTOR, ".flatpickr-day:nth-child(22)").click()
    self.driver.find_element(By.ID, "fechas_disponibles").send_keys("2025-04-13, 2025-04-20")
    self.driver.find_element(By.CSS_SELECTOR, ".dayContainer").click()
    self.driver.find_element(By.CSS_SELECTOR, ".flatpickr-day:nth-child(16)").click()
    self.driver.find_element(By.ID, "fechas_disponibles").send_keys("2025-04-13, 2025-04-20, 2025-04-14")
    self.driver.find_element(By.CSS_SELECTOR, ".flatpickr-day:nth-child(17)").click()
    self.driver.find_element(By.ID, "fechas_disponibles").send_keys("2025-04-13, 2025-04-20, 2025-04-14, 2025-04-15")
    self.driver.find_element(By.CSS_SELECTOR, ".flatpickr-day:nth-child(18)").click()
    self.driver.find_element(By.ID, "fechas_disponibles").send_keys("2025-04-13, 2025-04-20, 2025-04-14, 2025-04-15, 2025-04-16")
    self.driver.find_element(By.CSS_SELECTOR, ".dayContainer").click()
    self.driver.find_element(By.CSS_SELECTOR, ".flatpickr-day:nth-child(20)").click()
    self.driver.find_element(By.ID, "fechas_disponibles").send_keys("2025-04-13, 2025-04-20, 2025-04-14, 2025-04-15, 2025-04-16, 2025-04-18")
    self.driver.find_element(By.CSS_SELECTOR, ".flatpickr-day:nth-child(21)").click()
    self.driver.find_element(By.ID, "fechas_disponibles").send_keys("2025-04-13, 2025-04-20, 2025-04-14, 2025-04-15, 2025-04-16, 2025-04-18, 2025-04-19")
    self.driver.find_element(By.CSS_SELECTOR, ".flatpickr-day:nth-child(28)").click()
    self.driver.find_element(By.ID, "fechas_disponibles").send_keys("2025-04-13, 2025-04-20, 2025-04-14, 2025-04-15, 2025-04-16, 2025-04-18, 2025-04-19, 2025-04-26")
    self.driver.find_element(By.CSS_SELECTOR, ".flatpickr-day:nth-child(27)").click()
    self.driver.find_element(By.ID, "fechas_disponibles").send_keys("2025-04-13, 2025-04-20, 2025-04-14, 2025-04-15, 2025-04-16, 2025-04-18, 2025-04-19, 2025-04-26, 2025-04-25")
    self.driver.find_element(By.CSS_SELECTOR, ".dayContainer").click()
    self.driver.find_element(By.CSS_SELECTOR, ".flatpickr-day:nth-child(26)").click()
    self.driver.find_element(By.ID, "fechas_disponibles").send_keys("2025-04-13, 2025-04-20, 2025-04-14, 2025-04-15, 2025-04-16, 2025-04-18, 2025-04-19, 2025-04-26, 2025-04-25, 2025-04-24")
    self.driver.find_element(By.CSS_SELECTOR, ".flatpickr-day:nth-child(19)").click()
    self.driver.find_element(By.ID, "fechas_disponibles").send_keys("2025-04-13, 2025-04-20, 2025-04-14, 2025-04-15, 2025-04-16, 2025-04-18, 2025-04-19, 2025-04-26, 2025-04-25, 2025-04-24, 2025-04-17")
    self.driver.find_element(By.CSS_SELECTOR, ".flatpickr-day:nth-child(25)").click()
    self.driver.find_element(By.ID, "fechas_disponibles").send_keys("2025-04-13, 2025-04-20, 2025-04-14, 2025-04-15, 2025-04-16, 2025-04-18, 2025-04-19, 2025-04-26, 2025-04-25, 2025-04-24, 2025-04-17, 2025-04-23")
    self.driver.find_element(By.CSS_SELECTOR, ".flatpickr-day:nth-child(24)").click()
    self.driver.find_element(By.ID, "fechas_disponibles").send_keys("2025-04-13, 2025-04-20, 2025-04-14, 2025-04-15, 2025-04-16, 2025-04-18, 2025-04-19, 2025-04-26, 2025-04-25, 2025-04-24, 2025-04-17, 2025-04-23, 2025-04-22")
    self.driver.find_element(By.CSS_SELECTOR, ".flatpickr-day:nth-child(23)").click()
    self.driver.find_element(By.ID, "fechas_disponibles").send_keys("2025-04-13, 2025-04-20, 2025-04-14, 2025-04-15, 2025-04-16, 2025-04-18, 2025-04-19, 2025-04-26, 2025-04-25, 2025-04-24, 2025-04-17, 2025-04-23, 2025-04-22, 2025-04-21")
    imagenes_input = WebDriverWait(self.driver, 10).until(
    EC.presence_of_element_located((By.NAME, "imagenes"))
)
    temp_image_path = os.path.join(os.getcwd(), "temp_image.jpg")
    image = Image.new("RGB", (100, 100), color="red")  # Crear una imagen roja
    image.save(temp_image_path)

# Usar la imagen en la prueba
    imagenes_input.send_keys(temp_image_path)

# Limpieza del archivo después de la prueba
    os.remove(temp_image_path)    
    self.driver.find_element(By.CSS_SELECTOR, ".footer-button").click()
  
